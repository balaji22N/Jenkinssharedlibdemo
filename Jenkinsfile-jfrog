pipeline {
  agent  any
  parameters{

        choice(name: 'action', choices: 'create\ndelete', description: 'Choose create/Destroy')
        string(name: 'ImageName', description: "name of the docker build", defaultValue: 'javapp')
        string(name: 'ImageTag', description: "tag of the docker build", defaultValue: 'v1')
        string(name: 'DockerHubUser', description: "name of the Application", defaultValue: 'nishamoorthy')
        string(name: 'cluster', description: "name of the EKS Cluster", defaultValue: 'demo-cluster1')
        string(name: 'Region', description: "Region of ECR", defaultValue: 'us-east-1')
  }
  environment{

        ACCESS_KEY = credentials('AWS_ACCESS_KEY_ID')
        SECRET_KEY = credentials('AWS_SECRET_KEY_ID')
  }
  stages {
    stage( 'Gitcheckout') {
      when { expression {  params.action == 'create' } }
      steps {
        script {
          gitCheckout(
                branch: "main",
                url: "https://github.com/balaji22N/Jenkinssharedlibdemo.git"
          )
        }
      }
    }
    stage( 'upload') {
      when { expression {  params.action == 'create' } }
      steps {
        script {
         sh 'jf rt upload --url http://ip:8082/artifactory/ --access-token ${ARTIFACTORY_Access_token} target/.jar java-web-app(reponame in jfrog)/'
        }
      }
    }
 }
}
